# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson
'.text.xml.plist':
  'Apple PLIST':
    'prefix': 'plist'
    'body': """
    <?xml version="1.0" encoding="UTF-8"?>
    <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
    <plist version="1.0">
    	<dict>
    		<key>Label</key>
    		<string>${1:local.App.do_something}</string>
    		<key>Program</key>
    		<string>${2:/Users/daniel.brady/bin/scripts/something.sh}</string>
    		<key>${3:RunAtLoad}</key>
    		<true/>
    	</dict>
    </plist>
    """

'.source.ruby':
  'Rails debug (colored)':
    'prefix': 'debug'
    'body': 'Rails.logger.debug("\\\\e[1;45m$1\\\\e[0m")'
  'Rails info (colored)':
    'prefix': 'info'
    'body': 'Rails.logger.info("\\\\e[1;36m$1\\\\e[0m")'
  'Rails warn (colored)':
    'prefix': 'warn'
    'body': 'Rails.logger.warn("\\\\e[1;33m$1\\\\e[0m")'
  'Rails error (colored)':
    'prefix': 'error'
    'body': 'Rails.logger.error("\\\\e[1;41m$1\\\\e[0m")'
